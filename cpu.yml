---
 - hosts: localhost
   gather_facts: False
   become: false
   vars: 
      foo: ['log']
   tasks:
   - ec2_instance_facts:
       region: "{{ region }}"
       aws_access_key: "{{ aws_access_key }}"
       aws_secret_key: "{{ aws_secret_key }}"
       filters:
         tag-key: "{{ key }}"
         #tag-value: "{{ value }}"
     register: info
   - set_fact:
       ec2_tag: "{{ info.instances|map(attribute='tags')|list }}"
   - set_fact:
       ec2_tag1: "{{ ec2_tag|map(attribute='Application Role')|list }}"
   - set_fact:
       ec2_id: "{{ info.instances|map(attribute='instance_id')|list }}"
   - set_fact:
       ec2_details: "{{ info }}"

   - ec2_metric_alarm:
      name: "CPU Utilization for - {{ item.1 }}"
      state: absent
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      region: "{{ region }}"
      metric: "CPUUtilization"
      namespace: "AWS/EC2"
      statistic: Average
      comparison: ">="
      threshold: 90
      period: 60
      evaluation_periods: 3
      unit: "Percent"
      description: "This metric will trigger alarm when the CPU Utilization is above 90% with a evaluation period of 3"
      dimensions: "{'InstanceId': '{{ item.0 }}' }"
      alarm_actions: ["arn:aws:sns:us-east-1:216706741663:Alarm"]
     when: "'yes' in '{% for product in foo %} {% if   item.1.find( product ) != -1  %} yes {% else %} no {% endif %} {% endfor %}'"
     with_together: 
        - "{{ ec2_id }}"
        - "{{ ec2_tag1 }}"  
...
